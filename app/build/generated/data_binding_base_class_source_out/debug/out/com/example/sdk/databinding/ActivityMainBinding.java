// Generated by view binder compiler. Do not edit!
package com.example.sdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sdk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnApplyEnv;

  @NonNull
  public final Button btnGenerateData;

  @NonNull
  public final LinearLayout chartContainer;

  @NonNull
  public final Spinner envSpinner;

  @NonNull
  public final TextView tvSource;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnApplyEnv,
      @NonNull Button btnGenerateData, @NonNull LinearLayout chartContainer,
      @NonNull Spinner envSpinner, @NonNull TextView tvSource) {
    this.rootView = rootView;
    this.btnApplyEnv = btnApplyEnv;
    this.btnGenerateData = btnGenerateData;
    this.chartContainer = chartContainer;
    this.envSpinner = envSpinner;
    this.tvSource = tvSource;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApplyEnv;
      Button btnApplyEnv = ViewBindings.findChildViewById(rootView, id);
      if (btnApplyEnv == null) {
        break missingId;
      }

      id = R.id.btnGenerateData;
      Button btnGenerateData = ViewBindings.findChildViewById(rootView, id);
      if (btnGenerateData == null) {
        break missingId;
      }

      id = R.id.chartContainer;
      LinearLayout chartContainer = ViewBindings.findChildViewById(rootView, id);
      if (chartContainer == null) {
        break missingId;
      }

      id = R.id.envSpinner;
      Spinner envSpinner = ViewBindings.findChildViewById(rootView, id);
      if (envSpinner == null) {
        break missingId;
      }

      id = R.id.tvSource;
      TextView tvSource = ViewBindings.findChildViewById(rootView, id);
      if (tvSource == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnApplyEnv, btnGenerateData,
          chartContainer, envSpinner, tvSource);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
